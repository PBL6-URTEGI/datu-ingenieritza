- name: Crear contenedor MongoDB con replicación y keyFile
  community.docker.docker_container:
    name: mongodb-master
    image: mongo:latest
    detach: true
    hostname: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - /tmp/init-mongo:/docker-entrypoint-initdb.d
      - /tmp/mongo-keyfile:/data/configdb/mongo-keyfile
    env:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    command: --replSet myReplicaSet --keyFile /data/configdb/mongo-keyfile/mongo-keyfile.txt --bind_ip_all
- name: Esperar a que MongoDB esté disponible
  ansible.builtin.wait_for:
    host: 10.0.2.80
    port: 27017
    delay: 5
    timeout: 60

- name: Verificar estado del replica set
  ansible.builtin.command: >
    docker exec mongodb-master mongosh -u root -p root --quiet --eval
    'rs.status().ok'
  register: rs_status
  failed_when: false
  changed_when: false
- name: Iniciar el replica set de MongoDB
  ansible.builtin.command: >
    docker exec -i mongodb-master mongosh -u root -p root --eval '
    rs.initiate({
      _id: "myReplicaSet",
      members: [
        { _id: 0, host: "10.0.2.80:27017" },
        { _id: 1, host: "10.0.2.81:27017" },
        { _id: 2, host: "10.0.2.82:27017" }
      ]
    })'
  when: inventory_hostname == "10.0.2.80"
